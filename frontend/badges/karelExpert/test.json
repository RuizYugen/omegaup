{
    "testType": "apicall",
    "actions": [
        {
            "type": "apicalls",
            "apicalls": [
                {
                    "username": "admintest",
                    "password": "testtesttest",
                    "requests": [
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic",
                                "problem_alias": "mrkareltastic",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_2",
                                "problem_alias": "mrkareltastic_2",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_3",
                                "problem_alias": "mrkareltastic_3",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_4",
                                "problem_alias": "mrkareltastic_4",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_5",
                                "problem_alias": "mrkareltastic_5",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_6",
                                "problem_alias": "mrkareltastic_6",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_7",
                                "problem_alias": "mrkareltastic_7",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_8",
                                "problem_alias": "mrkareltastic_8",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_9",
                                "problem_alias": "mrkareltastic_9",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_10",
                                "problem_alias": "mrkareltastic_10",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Problem::apiCreate",
                            "params": {
                                "visibility": 1,
                                "title": "mrkareltastic_11",
                                "problem_alias": "mrkareltastic_11",
                                "validator": "token-caseless",
                                "time_limit": 1000,
                                "validator_time_limit": 0,
                                "overall_wall_time_limit": 1000,
                                "extra_wall_time": 0,
                                "memory_limit": 32768,
                                "output_limit": 10240,
                                "input_limit": 10240,
                                "source": "omegaUp classics",
                                "languages": "kj,kp",
                                "email_clarifications": 1
                            },
                            "files": {
                                "problem_contents": "frontend/tests/resources/mrkareltastic.zip"
                            }
                        },                    
                        {
                            "api": "\\OmegaUp\\Controllers\\User::apiCreate",
                            "params": {
                                "username": "test_user_0",
                                "email": "user_0@domain.com",
                                "password": "test_user_0"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\User::apiCreate",
                            "params": {
                                "username": "test_user_1",
                                "email": "user_1@domain.com",
                                "password": "test_user_1"
                            }
                        }
                    ]
                },
                {
                    "username": "test_user_1",
                    "password": "test_user_1",
                    "requests": [
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_2",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_3",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_4",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_5",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_6",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_7",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_8",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_9",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_10",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        },
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic_11",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        }
                    ]
                },
                {
                    "username": "test_user_0",
                    "password": "test_user_0",
                    "requests": [
                        {
                            "api": "\\OmegaUp\\Controllers\\Run::apiCreate",
                            "params": {
                                "problem_alias": "mrkareltastic",
                                "language": "kj",
                                "source": "class program {\n    define halfturn()\n    {\n        iterate(2)turnleft();\n    }\n    define turnright()\n    {\n        iterate(3)turnleft();\n    }\n    define miturnoff()\n    {\n        while(notFacingNorth)turnleft();\n        turnoff();\n    }\n    define acomoda()\n    {\n        if(frontIsBlocked && leftIsClear)\n        {\n            turnleft();\n        }\n        else if(frontIsBlocked && rightIsClear)\n        {\n            iterate(3)turnleft();\n        }\n    }\n    define otroturnoff()\n    {\n        while(notFacingSouth)turnleft();\n        turnoff();\n    }\n    define f1(k)\n    {\n        if(iszero(k)){\n            miturnoff();\n        }\n        halfturn();\n    }\n    define f2(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f1(succ(k)); }\n        else if(facingWest) { f1(pred(k)); }\n        else if(facingNorth) { f1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f3(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f2(succ(k)); }\n        else if(facingWest) { f2(pred(k)); }\n        else if(facingNorth) { f2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f4(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f3(succ(k)); }\n        else if(facingWest) { f3(pred(k)); }\n        else if(facingNorth) { f3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f5(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f4(succ(k)); }\n        else if(facingWest) { f4(pred(k)); }\n        else if(facingNorth) { f4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f6(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f5(succ(k)); }\n        else if(facingWest) { f5(pred(k)); }\n        else if(facingNorth) { f5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f7(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f6(succ(k)); }\n        else if(facingWest) { f6(pred(k)); }\n        else if(facingNorth) { f6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f8(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f7(succ(k)); }\n        else if(facingWest) { f7(pred(k)); }\n        else if(facingNorth) { f7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n\n    define f9(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f8(succ(k)); }\n        else if(facingWest) { f8(pred(k)); }\n        else if(facingNorth) { f8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f10(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f9(succ(k)); }\n        else if(facingWest) { f9(pred(k)); }\n        else if(facingNorth) { f9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f11(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f10(succ(k)); }\n        else if(facingWest) { f10(pred(k)); }\n        else if(facingNorth) { f10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f12(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f11(succ(k)); }\n        else if(facingWest) { f11(pred(k)); }\n        else if(facingNorth) { f11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f13(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f12(succ(k)); }\n        else if(facingWest) { f12(pred(k)); }\n        else if(facingNorth) { f12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define f14(k)\n    {\n        if(iszero(k)){miturnoff();}\n        acomoda();\n        move();\n        if(facingEast) {  f13(succ(k)); }\n        else if(facingWest) { f13(pred(k)); }\n        else if(facingNorth) { f13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(k))))))))))))))))); }\n        else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))); }\n        acomoda();\n        move();\n    }\n    define dofirst(k)\n    {\n        if(frontIsBlocked && leftIsClear)\n            turnleft();\n        else if(frontIsBlocked && rightIsClear)\n            turnright();\n        if(iszero(pred(k)) || iszero(pred(pred(k))) || iszero(pred(pred(pred(k)))) || iszero(pred(pred(pred(pred(k))))))\n            otroturnoff();\n        acomoda();\n        move();\n        if(iszero(pred(pred(pred(pred(pred(k)))))))\n        {\n            if(facingEast) {  f4(1); }\n            else if(facingWest) { f4(pred(0)); }\n            else if(facingNorth) { f4(16); }\n            else if(facingSouth) { f4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(k))))))))\n        {\n            if(facingEast) {  f5(1); }\n            else if(facingWest) { f5(pred(0)); }\n            else if(facingNorth) { f5(16); }\n            else if(facingSouth) { f5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(k)))))))))\n        {\n            if(facingEast) {  f6(1); }\n            else if(facingWest) { f6(pred(0)); }\n            else if(facingNorth) { f6(16); }\n            else if(facingSouth) { f6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))\n        {\n            if(facingEast) {  f7(1); }\n            else if(facingWest) { f7(pred(0)); }\n            else if(facingNorth) { f7(16); }\n            else if(facingSouth) { f7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))\n        {\n            if(facingEast) {  f8(1); }\n            else if(facingWest) { f8(pred(0)); }\n            else if(facingNorth) { f8(16); }\n            else if(facingSouth) { f8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))\n        {\n            if(facingEast) {  f9(1); }\n            else if(facingWest) { f9(pred(0)); }\n            else if(facingNorth) { f9(16); }\n            else if(facingSouth) { f9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))\n        {\n            if(facingEast) {  f10(1); }\n            else if(facingWest) { f10(pred(0)); }\n            else if(facingNorth) { f10(16); }\n            else if(facingSouth) { f10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))\n        {\n            if(facingEast) {  f11(1); }\n            else if(facingWest) { f11(pred(0)); }\n            else if(facingNorth) { f11(16); }\n            else if(facingSouth) { f11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))\n        {\n            if(facingEast) {  f12(1); }\n            else if(facingWest) { f12(pred(0)); }\n            else if(facingNorth) { f12(16); }\n            else if(facingSouth) { f12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k))))))))))))))))\n        {\n            if(facingEast) {  f13(1); }\n            else if(facingWest) { f13(pred(0)); }\n            else if(facingNorth) { f13(16); }\n            else if(facingSouth) { f13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(k)))))))))))))))))\n        {\n            if(facingEast) {  f14(1); }\n            else if(facingWest) { f14(pred(0)); }\n            else if(facingNorth) { f14(16); }\n            else if(facingSouth) { f14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0))))))))))))))))); }\n        }\n        acomoda();\n        move();\n        halfturn();\n    }\n    define do225(k)\n    {\n        iterate(225)\n        {\n            dofirst(k);\n            acomoda();\n            move();\n        }\n    }\n    define countwall(k)\n    {\n        if(frontIsClear)\n        {\n            move();\n            countwall(succ(k));\n        }\n        else\n        {\n            halfturn();\n            while(frontIsClear)move();\n            halfturn();\n            do225(k);\n        }\n    }\nprogram() {\n    while(notFacingEast)\n        turnleft();\n    countwall(1);\n    otroturnoff();\n    turnoff();\n}\n}"
                            },
                            "gradeResult": {
                                "verdict": "AC"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "expectedResults": [
        "test_user_1"
    ]
}
